name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - '*'  # Triggers on any tag

jobs:
  build:
    branches:
      - '*'  # Triggers on any branch

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install
      run: |
        make install

    - name: Lint
      run: |
        make lint

    - name: Tests
      run: |
        make test

    - name: Cache pip packages
      id: cache-pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache venv folder
      uses: actions/cache@v3
      with:
        path: venv
        key: ${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-${{ matrix.python-version }}

    - name: Cache build Artifacts
        id: cache-build
      uses: actions/cache@v3
      with:
        path: build
        key: ${{ runner.os }}-build-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-build-${{ github.sha }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

     - name: Restore cache for venv
      uses: actions/cache@v3
      with:
        path: venv
        key: ${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}

    - name: Restore Build Artifacts
      uses: actions/cache@v3
      with:
        path: build
        key: ${{ runner.os }}-build-${{ github.sha }}

    - name: Create Bundle
      run: |
        make bundle-release

    - name: Read CHANGELOG
      id: read_changelog
      run: |
        changelog_content=$(cat CHANGELOG.md)
        echo "::set-output name=changelog::$changelog_content"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        body: ${{ steps.read_changelog.outputs.changelog }}
        draft: false
        prerelease: false

    - name: Upload Bundle to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/abletoolkit-bundle.zip
        asset_name: abletoolkit-bundle.zip
        asset_content_type: application/zip
